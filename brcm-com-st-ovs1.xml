<node>
  <!-- com.st.ovs1.DeviceInfo:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a DeviceInfo.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.DeviceInfo">
    <method name="Reboot">
      <arg direction="out" type="u" name="result"/>
    </method>

    <method name="FactoryReboot">
      <arg direction="out" type="u" name="result"/>
    </method>

    <property name="BusinessStatus" type="y" access="read" notify="yes"/>
    <property name="Manufacturer" type="s" access="read" notify="yes"/>
    <property name="MAC" type="s" access="read" notify="yes"/>
    <property name="SN" type="s" access="read" notify="yes"/>
    <property name="SWVersion" type="s" access="read" notify="yes"/>
    <property name="HDVersion" type="s" access="read" notify="yes"/>
    <property name="ProductClass" type="s" access="read" notify="yes"/>
    <property name="CPUClass" type="s" access="read" notify="yes"/>
    <property name="DevType" type="s" access="read" notify="yes"/>
    <property name="FlashSize" type="u" access="read" notify="yes"/>
    <property name="RamSize" type="u" access="read" notify="yes"/>
    <property name="DevName" type="s" access="read" notify="yes"/>
    <property name="CPUUsage" type="y" access="read"/>
    <property name="MEMUsage" type="y" access="read"/>
    <property name="FlashUsage" type="y" access="read"/>
    <property name="SysDuration" type="u" access="read"/>
  </interface>

  <!-- com.st.ovs1.NetworkInfo:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a NetworkInfo.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.NetworkInfo">
    <property name="UPLink" type="u" access="read" notify="yes"/>
    <property name="IPV6" type="y" access="read" notify="yes"/>
    <property name="VLANbind" type="y" access="read"/>
    <property name="WiFiMode" type="s" access="read"/>
    <property name="PONDuration" type="u" access="read"/>
    <property name="PPPOEDuration" type="u" access="read"/>
    <property name="LAN1Status" type="y" access="read" notify="yes"/>
    <property name="LAN2Status" type="y" access="read" notify="yes"/>
    <property name="LAN3Status" type="y" access="read" notify="yes"/>
    <property name="LAN4Status" type="y" access="read" notify="yes"/>
    <property name="LAN1TXByte" type="t" access="read"/>
    <property name="LAN1RXByte" type="t" access="read"/>
    <property name="LAN2TXByte" type="t" access="read"/>
    <property name="LAN2RXByte" type="t" access="read"/>
    <property name="LAN3TXByte" type="t" access="read"/>
    <property name="LAN3RXByte" type="t" access="read"/>
    <property name="LAN4TXByte" type="t" access="read"/>
    <property name="LAN4RXByte" type="t" access="read"/>
    <property name="WANLinkStatus" type="s" access="read" notify="yes"/>
    <property name="WIFIModuleStatus" type="s" access="read" notify="yes"/>
    <property name="WANConnectionStatus" type="s" access="read" notify="yes"/>
    <property name="PPPoEDialReason" type="s" access="read"/>
    <property name="IPV6_WANConnectionStatus" type="s" access="read" notify="yes"/>
    <property name="IPV6_PPPoEDialReason" type="s" access="read"/>
    <property name="LANIPAddr" type="s" access="read" notify="yes"/>
    <property name="WANIPAddr" type="s" access="read" notify="yes"/>
    <property name="WANIPV6Addr" type="s" access="read" notify="yes"/>
    <property name="WiFiBytes" type="t" access="read"/>
    <property name="WiFiTxBytes" type="t" access="read"/>
    <property name="WiFiRxBytes" type="t" access="read"/>
    <property name="WANBytes" type="t" access="read"/>
    <property name="WANTxBytes" type="t" access="read"/>
    <property name="WANRxBytes" type="t" access="read"/>
  </interface>

  <!-- com.st.ovs1.WANConnectionInfo: Dynamic instance
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a WANConnectionInfo.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.WANConnectionInfo">
    <property name="Index" type="s" access="read"/>
    <property name="WANName" type="s" access="read"/>
    <property name="IfName" type="s" access="read"/>
    <property name="ServiceList" type="s" access="read"/>
    <property name="ConnectionType" type="s" access="read"/>
    <property name="VLANID" type="u" access="read"/>
    <property name="VLAN8021P" type="u" access="read"/>
    <property name="Protocol" type="s" access="read"/>
    <property name="ConnectionStatus" type="s" access="read"/>
    <property name="IPAddress" type="s" access="read"/>
    <property name="SubnetMask" type="s" access="read"/>
    <property name="Gateway" type="s" access="read"/>
    <property name="DNS1" type="s" access="read"/>
    <property name="DNS2" type="s" access="read"/>
    <property name="IPV6_ConnectionStatus" type="s" access="read"/>
    <property name="IPV6_IPAddress" type="s" access="read"/>
    <property name="IPV6_PrefixLength" type="s" access="read"/>
    <property name="IPV6_Gateway" type="s" access="read"/>
    <property name="IPV6_DNS1" type="s" access="read"/>
    <property name="IPV6_DNS2" type="s" access="read"/>
    <property name="IPV6_Prefix" type="s" access="read"/>
    <property name="RxBytes" type="t" access="read"/>
    <property name="TxBytes" type="t" access="read"/>
    <property name="RxPkts" type="t" access="read"/>
    <property name="TxPkts" type="t" access="read"/>
  </interface>

  <!-- com.st.ovs1.PONInfo:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a PONInfo.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.PONInfo">
    <property name="LOID" type="s" access="read"/>
    <property name="Password" type="s" access="read"/>
    <property name="Temperature" type="d" access="read"/>
    <property name="Voltage" type="d" access="read"/>
    <property name="Current" type="d" access="read"/>
    <property name="TXPower" type="d" access="read"/>
    <property name="RXPower" type="d" access="read"/>
    <property name="SupportPONStatusQuery" type="b" access="read"/>
    <property name="PONStatus" type="s" access="read"/>
  </interface>

  <!-- com.st.ovs1.VoIPInfo:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a VoIPInfo.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.VoIPInfo">
    <property name="VoIPName1" type="s" access="read" notify="yes"/>
    <property name="VoIPName2" type="s" access="read" notify="yes"/>
    <property name="Line1Status" type="s" access="read" notify="yes"/>
    <property name="Line2Status" type="s" access="read" notify="yes"/>
  </interface>

  <!-- com.st.ovs1.WLANConfiguration: Dynamic instance
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a WLANConfiguration.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.WLANConfiguration">
    <property name="SSID" type="s" access="readwrite"/>
    <property name="Enable" type="b" access="readwrite"/>
    <property name="Channel" type="u" access="readwrite"/>
    <property name="ChannelInUse" type="u" access="read"/>
    <property name="BeaconType" type="s" access="readwrite"/>
    <property name="Standard" type="s" access="readwrite"/>
    <property name="WEPEncryptionLevel" type="s" access="readwrite"/>
    <property name="BasicAuthenticationMode" type="s" access="readwrite"/>
    <property name="WPAEncryptionModes" type="s" access="readwrite"/>
    <property name="SSIDHide" type="b" access="readwrite"/>
    <property name="RFBand" type="u" access="read"/>
    <property name="ChannelWidth" type="u" access="readwrite"/>
    <property name="GuardInterval" type="u" access="readwrite"/>
    <property name="RetryTimeout" type="u" access="readwrite"/>
    <property name="Powerlevel" type="u" access="readwrite"/>
    <property name="PowerValue" type="u" access="read"/>
    <property name="PWD" type="s" access="readwrite"/>
    <property name="RxBytes" type="t" access="read"/>
    <property name="RxPkts" type="t" access="read"/>
    <property name="RxErrorPkts" type="t" access="read"/>
    <property name="RxDropPkts" type="t" access="read"/>
    <property name="TxBytes" type="t" access="read"/>
    <property name="TxPkts" type="t" access="read"/>
    <property name="TxErrorPkts" type="t" access="read"/>
    <property name="TxDropPkts" type="t" access="read"/>
  </interface>

  <!-- com.st.ovs1.DHCPServer:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a DHCPServer.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.DHCPServer">
    <property name="Enable" type="b" access="readwrite" notify="yes"/>
    <property name="MinAddress" type="s" access="readwrite" notify="yes"/>
    <property name="MaxAddress" type="s" access="readwrite" notify="yes"/>
    <property name="IPAddr" type="s" access="readwrite" notify="yes"/>
    <property name="SubnetMask" type="s" access="readwrite" notify="yes"/>
    <property name="LeaseTime" type="u" access="readwrite" notify="yes"/>
  </interface>

  <!-- com.st.ovs1.NetNamespace:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a NetNamespace.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.NetNamespace">
    <method name="AddNetNamespace">
      <arg direction="in" type="s" name="netns_name"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="DelNetNamespace">
      <arg direction="in" type="s" name="netns_name"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
    
    <method name="QueryNetNamespce">
      <arg direction="in" type="s" name="netns_name"/>
      <arg direction="out" type="s" name="ovsport"/>
      <arg direction="out" type="s" name="iptables"/>	
      <arg direction="out" type="s" name="routetbl"/>
      <arg direction="out" type="s" name="firewall"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>    
  </interface>
  
  <!-- com.st.ovs1.PPPConnection:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a PPPConnection.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.PPPConnection">
    <method name="AddPPPConnection">
      <arg direction="in" type="s" name="ppp_name"/>
      <arg direction="in" type="s" name="l2_intf"/>
      <arg direction="in" type="s" name="ppp_account"/>
      <arg direction="in" type="s" name="ppp_pwd"/>
      <arg direction="in" type="i" name="vlanID"/>
      <arg direction="in" type="i" name="vlan8021p"/>
      <arg direction="in" type="u" name="vlanTpid"/>
      <arg direction="in" type="s" name="netns"/>
      <arg direction="in" type="b" name="defaultGW"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="DelPPPConnectiony">
      <arg direction="in" type="s" name="ppp_name"/>
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
     
    <!--
        PPPStatusChanged:
        PPP connection link up or link down message 
    -->
    <signal name="PPPStatusChanged">
      <arg type="s" name="PPPStauts"/>
      <arg type="s" name="netns"/>
      <arg type="s" name="wanconnInfo"/>      
    </signal>   
  </interface>
  
  <!-- com.st.ovs1.VPNConnection:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a VPNConnection.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.VPNConnection">
    <method name="AddVPNConnection">
      <arg direction="in" type="s" name="vpn_type"/>
      <arg direction="in" type="s" name="tunnel_name"/>
      <arg direction="in" type="s" name="ppp_name"/>
      <arg direction="in" type="s" name="vpn_account"/>
      <arg direction="in" type="s" name="vpn_pwd"/>
      <arg direction="in" type="s" name="lnsipaddr"/>
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="DelVPNConnectiony">
      <arg direction="in" type="s" name="vpn_type"/>
      <arg direction="in" type="s" name="tunnel_name"/>
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
     
    <!--
        VPNConnStatusChanged:
        VPN connection link up or link down message 
    -->
    <signal name="VPNConnStatusChanged">
      <arg type="s" name="VPNConnStauts"/>
      <arg type="s" name="netns"/>      
    </signal>      
  </interface>
  
  <!-- com.st.ovs1.OvsPort:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a OvsPort.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.OvsPort">
    <method name="AddOvsPort">
      <arg direction="in" type="s" name="port_name"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="DelOvsPort">
      <arg direction="in" type="s" name="port_name"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
    
    <method name="MoveOvsPort">
      <arg direction="in" type="s" name="port_name"/>
      <arg direction="in" type="s" name="pre_netns"/>
      <arg direction="in" type="s" name="target_netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
  </interface>
  
  <!-- com.st.ovs1.Route:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a Route.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.Route">
    <method name="AddDefaultRoute">      
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="CleanRouteTable">      
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>
    
    <!--
        RouteTblChanged:
        Route table is changed 
    -->
    <signal name="RouteTblChanged">
      <arg type="s" name="netns"/>      
    </signal>          
  </interface>
  
  <!-- com.st.ovs1.Firewall:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a Firewall.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.Firewall">
    <method name="AddDefaultFirewall">      
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <method name="CleanFirewall">      
      <arg direction="in" type="s" name="netns"/>
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>    
    
    <!--
        FirewallChanged:
        Firewall is changed 
    -->
    <signal name="FirewallChanged">
      <arg type="s" name="netns"/>      
    </signal>              
  </interface>
  

  <!-- com.st.ovs1.DNSServerConfig:
       @short_description: More example docs generated by gdbus-codegen

       This D-Bus interface is used to describe a DNSServerConfig.
       It should use standard Interface such as org.freedesktop.DBus.Properties.
  -->
  <interface name="com.st.ovs1.DNSServerConfig">
    <!--
        FlushDNS:
        @result: output, test result.
        @errdesc: output, test errdesc.

        FlushDNS used to flush DNS cache
    -->
    <method name="FlushDNS">
      <arg direction="out" type="u" name="result"/>
      <arg direction="out" type="s" name="errdesc"/>
    </method>

    <property name="Server1" type="s" access="readwrite"/>
    <property name="Server2" type="s" access="readwrite"/>
  </interface>
  
</node>

